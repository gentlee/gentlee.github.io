<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://alexander-danilov.dev</id>
    <title>Alexander Danilov's blog</title>
    <updated>2025-01-14T16:53:10.122Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>Alexander Danilov</name>
        <email>dienes_gainful_3p@icloud.com</email>
        <uri>https://alexander-danilov.dev</uri>
    </author>
    <link rel="alternate" href="https://alexander-danilov.dev"/>
    <link rel="self" href="https://alexander-danilov.dev/atom.xml"/>
    <logo>https://github.com/gentlee.png</logo>
    <icon>https://alexander-danilov.dev/favicon.icn</icon>
    <rights>Alexander Danilov (c)</rights>
    <entry>
        <title type="html"><![CDATA[Styles, themes, and adaptive layout in React Native]]></title>
        <id>react-native-styles-and-adaptive-ui</id>
        <link href="https://alexander-danilov.dev/en/articles/react-native-styles-and-adaptive-ui/"/>
        <updated>2024-11-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article will teach you how to effectively organize a crucial part of React Native development: managing styles and resources to create adaptive and accessible interfaces for three platforms: iOS, Android, and Web. We’ll also discuss whether libraries are necessary and explore the peculiarities of layouts and performance issues within the framework.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[RRC library for request and cache management based on Redux: [better] alternative to RTK-Query and other solutions]]></title>
        <id>react-redux-cache</id>
        <link href="https://alexander-danilov.dev/en/articles/react-redux-cache/"/>
        <updated>2024-09-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introducing react-redux-cache (RRC) - a lightweight library for data fetching and caching in React applications that supports normalization, unlike React Query and RTK Query, while featuring a similar but much simpler interface. Built on Redux, it is fully tested, completely typed, and written in TypeScript.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hidden knowledge: synchronization, multithreading, queues]]></title>
        <id>serial-queues</id>
        <link href="https://alexander-danilov.dev/en/articles/serial-queues/"/>
        <updated>2024-03-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Is it possible that most popular programming languages lack the most efficient synchronization mechanism? Could it be that engineers at Microsoft, Oracle, and many others, not to mention everyone else, have not figured out the most effective way to synchronize data access even by 2024? Is most of what programmers, including those in top IT companies (except for rare Apple platform developers), know about synchronization — wrong? Today, we will explore this in detail.This article assumes that you already have a basic understanding of synchronization mechanisms. The code is written in C#, but the specific language is not of particular importance.]]></summary>
    </entry>
</feed>